import { Button, VerticalBox, LineEdit } from "std-widgets.slint";

export component AppWindow inherits Window {
    in property <string> results: "";
    // in-out property <bool> openanimation;
    callback divide-income(string);
    background: #111;
    GridLayout {
        padding: 46px;
        spacing: 16px;
        Row {
            Text {
                text: "Enter total income";
                horizontal-alignment: center;
                font-size: 24px;
                font-weight: 700;
            }
        }

        Row {
            income := LineEdit {
                font-size: 16px;
                placeholder-text: "Enter text here";
                horizontal-alignment: center;
                padding: 8px;
            }
        }

        Row {
            Button {
                text: "Calculate";
                primary: true;
                padding: 8px;
                clicked => {
                    // root.openanimation = !root.openanimation
                    divide-income(income.text)
                }
            }
        }

        Row {
            VerticalBox {
                Rectangle {
                    height: 100px;
                    background: #222222;
                    border-radius: 4px;
                    padding: 16px;
                    Text {
                        color: #fff;
                        font-size: 16px;
                        font-weight: 700;
                        text: root.results;
                    }
                }

                // Rectangle {
                //     background: #000;
                //     x: 0;
                //     width: openanimation ? 0 : parent.width / 2;
                //     height: parent.height;
                //     animate width {
                //         duration: 250ms;
                //         easing: ease-in;
                //     }
                // }

                // Rectangle {
                //     background: #000;
                //     x: openanimation ? parent.width : parent.width / 2;
                //     width: openanimation ? 0 : parent.width / 2;
                //     height: parent.height;
                //     animate width {
                //         duration: 250ms;
                //         easing: ease-in;
                //     }
                //     animate x {
                //         duration: 250ms;
                //         easing: ease-in;
                //     }
                // }
            }
        }
    }
}
